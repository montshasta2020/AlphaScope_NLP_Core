import os
import openai
import json


text = ""

#with open("OpenAICharta.json", "r") as read_file:
   #json_train_1 = json.load(read_file)
#json_train_1 = json.dumps(json_train_1)

#with open("ElonMusk.json", "r") as read_file:
   #json_train_2 = json.load(read_file)
#json_train_2 = json.dumps(json_train_1)

json_dict = str({"title":"The Charter of OpenAI","photo":"contract","slides":[{"title":"Broadly Distributed Benefits","points":[{"headline":"Benefit of all","icon":"everyone","summary":"Artificial Intelligence should be for the benefit of all"},{"headline":"No harm","icon":"harm","summary":"No uses of AI that enable harm to humanity should be enabled"},{"headline":"conflicts with stakeholders","icon":"stakeholder","summary":"minimize conflicts of interest among stakeholders that could compromise the goal"}]},{"title":"Long-Term Safety","points":[{"headline":"Safety","icon":"safe","summary":"Do research required to make artificial intelligence safe"},{"headline":"Cooperation","icon":"team","summary":"if a value-aligned project reaches goal first we are planning on teaming up with them"}]},{"title":"Technical Leadership","points":[{"headline":"Cutting Edge","icon":"cutting edge","summary":"OpenAI must be on cutting edge of AI capabilities"},{"headline":"Preproducts","icon":"product","summary":"We must lead with preproducts which should be used according to the charta"}]},{"title":"Cooperative Orientation","points":[{"headline":"Cooperation","icon":"cooperation","summary":"Actively cooperate with other research and policy institutions"},{"headline":"Community","icon":"community","summary":"Create a global community working together to address AGI's global challenges"},{"headline":"Public Goods","icon":"source code","summary":"provide public goods like source code"}]}]})
API_key  = 


def json_gen(text,API_key,max_tokens):
    """
    Creates a dict with a json file based on a video script using the GPT-3 model of OpenAI.
    
    Args:
        text:
        String containing the video script. Json file will be generated from this script
        API_key:
        Secret API Key.       
        max_tokens:
        The maximum number of tokens to be generated. 
    
    Returns:
        response: 
        String containing the list of instructions generated by GPT-3. In the text key, the json file is included.
    """
    openai.api_key = API_key

    prompt = "\n"\
    "Input text:\n"\
    "\n"\
    "Hello everyone, today I want to talk to you about the charter of open AI. So one important aspect are broadly distributed benefits. So we want artificial intelligence for the benefit of all. While not enabling users of AI that may harm humanity. We also want to minimize conflicts of interests among stakeholders that could compromise our goal. Apart from that, we want long term safety. So we want you to research required to make artificial intelligence safe. And if a value aligned project reaches the goal First, we are planning on teaming up with them in order to avoid the rights. In order to achieve that, we also need technical leadership. So openly I must be on the cutting edge of AI capabilities, and also lead with the pre products. Those should, in turn be used according to our chart. Lastly, we have a cooperative orientation. So we want to actively cooperate with other research and policy institutions to create a global community working together to address API's global challenges, and provide public goods like source code.\n"\
    "Json file:\n"\
    "\n"\
    "\n" + json_dict + "\n"\
    "Input text:\n"\
    "\n" + text + "\n"\
    "Json file:\n"
    "\n"
    response = openai.Completion.create(
    engine="davinci",
    prompt=prompt,
    temperature=0.4,
    max_tokens=max_tokens,
    top_p=1.0,
    frequency_penalty=0.0,
    presence_penalty=0.0)

    return response

print(json_gen(text,API_key,max_tokens=400)['choices'][0]['text'])